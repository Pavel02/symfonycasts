Pagination

Вероятно, что если вы попытаетесь отобразить 1000 сущностей Доктрины, то
 это будет медленно или вообще не отобразится в браузере.

 Для Пагинации будем использовать уже имеющиеся Бандлы.
                        composer require knplabs/knp-paginator-bundle

 Самое главное в Бандлах, что они предоставляют нам новые Сервисы.

 К этому Бандлу имеется документация, но она устарела.
  Так там используется   $this->get('knp_paginator')  это метод аналогичный   $this->container->get()
   и это старый способ извлечения Сервиса из Контейнера по его id.

 Бест-практик сейчас использовать инъекцию зависимостей  Dependency Injection,
  это почти всегда означает autowiring.






*** Paginator Usage and the Autowiring Alias ***
 Если мы посмотрим доступные Сервисы,
            php bin/console debug:autowiring
 то там будет
                  Knp\Component\Pager\PaginatorInterface
                      alias to knp_paginator


*** Using the Paginator ***

Внесем изменения в /src/Controller/CommentAdminController


В экшн передадим 3-й аргумент     Сервис $paginator
Далее в рендер будем передавать  $pagination  ,
 а в $repository переименуем и изменим старый метод.

            class CommentAdminController extends AbstractController
            {
                /**
                 * @Route("/admin/comment", name="comment_admin")
                 */
                public function index(CommentRepository $repository, Request $request, PaginationInterface $paginator)
                {
                    $q = $request->query->get('q');

                    $queryBuilder = $repository->getWithSearchQueryBuilder($q);

                    $pagination = $paginator->paginate(
                        $queryBuilder, /* query NOT result */
                        $request->query->getInt('page', 1)/*page number*/,
                        10/*limit per page*/
                    );

                    return $this->render('comment_admin/index.html.twig', [
                        'pagination' => $pagination,
                    ]);
                }
            }


В классе  репозитория   /src/Repository/CommentRepository.php
  старый метод переименуем и поменяем содержимое.
                class CommentAdminController extends AbstractController
                {
                    /**
                     * @Route("/admin/comment", name="comment_admin")
                     */
                    public function index(CommentRepository $repository, Request $request, PaginationInterface $paginator)
                    {
                        $q = $request->query->get('q');

                        $queryBuilder = $repository->getWithSearchQueryBuilder($q);

                        $pagination = $paginator->paginate(
                            $queryBuilder, /* query NOT result */
                            $request->query->getInt('page', 1)/*page number*/,
                            10/*limit per page*/
                        );

                        return $this->render('comment_admin/index.html.twig', [
                            'pagination' => $pagination,
                        ]);
                    }
                }




*** Using the Bootstrap Pager Navigation Theme ***

Кнопки пагинации ужасны, и нам надо поменять шаблон.

Для некоторых Сервисов создается файл конфига, но здесь мы создадим вручную файл   /config/packages/knp_pagination.yaml
 И напишем, что будем использовать другой бутстрап шаблон.
                    knp_paginator:
                      template:
                        pagination: '@KnpPaginator/Pagination/twitter_bootstrap_v4_pagination.html.twig'

Сведения о доступных настройках взяли из README на гитхабе для этого бандла.
















