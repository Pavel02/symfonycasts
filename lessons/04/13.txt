Request Object & Query OR Logic

 В админке сейчас таблица со всеми комментариями к статьям. Добавим поле поиска над ней.

   В шаблоне твига /templates/comment_admin/index.html.twig   сверху таблицы добавим.

                            <form>
                                <div class="input-group mb-3">
                                    <input type="text"
                                           name="q"
                                           class="form-control"
                                           placeholder="Search..."
                                    >
                                    <div class="input-group-append">
                                        <button type="submit"
                                                class="btn btn-outline-secondary">
                                            <span class="fa fa-search"></span>
                                        </button>
                                    </div>
                                </div>
                            </form>

 В этой форме нет action=    это значит, что форма будет отправлять обратно на этот же адрес.
 Также нет   method=   значит отправка будет методом GET.



*** Fetching the Request Object ***

  Как прочитать GET POST или заголовки или загруженные файлы или Куки?
   Поможет объект Request от Symfony.

  Чтобы получить его в экшене контроллера, передадим тайпхинт в метод.
            public function index(CommentRepository $repository, Request $request)

  Пока что знакомились с 2 магическими свойствами:
        1. Если вводим тайп-хинт как подсказку, то Symfony предоставит этот сервис.
        2. Если тайп-хинт будет для Entity, то симфони будет запрашивать эту сущность, используя wildcard из роута.

   Казалось бы здесь происходит случай 1, но на самом деле объект Request не является Сервисом.
    здесь 3 случай.
    И так.
       1. тайп-хинт Сервис.
       2. тайп-хинт Entity.
       3. тайп-зинт Request класс.

   Есть сервис называемый RequestStack
                public function index(RequestStack $requestStack)
                {
                    $request = $requestStack->getCurrentRequest();
                }

 Запрос дает нам доступ ко всему:
        $q = $request->query->get('q');

 Также есть и другие
        $request->headers
        $request->cookie
        $request->files



*** A Custom Query with OR Logic ***
   Нам нужно в запросе использовать LIKE, поэтому   findBy() нам не подойдет.
    Поэтому в    CommentRepository  добавим
                        /**
                         * @param string|null $term
                         * @return Comment[]
                         */
                        public function findAllWithSearch(?string $term)
                        {

    Внутри метода напишем наш клиентский запрос.
                    $qb = $this->createQueryBuilder('c');
     используется $this->createQueryBuider  и  передается алиас   'c'.

    Вторая часть запроса нам нужна:
                    WHERE content LIKE $term OR authorName LIKE $term.


    Вроде есть метод orWhere(), но его автор рекомендует не использовать, чтобы не путаться.
     и писать прямо в коде.
                /**
                 * @param string|null $term
                 * @return Comment[]
                 */
                public function findAllWithSearch(?string $term)
                {
                    $qb = $this->createQueryBuilder('c');
                    if ($term) {
                        $qb->andWhere('c.content LIKE :term OR c.authorName LIKE :term')
                            ->setParameter('term', '%' . $term . '%')
                        ;
                    }
                    return $qb
                        ->orderBy('c.createdAt', 'DESC')
                        ->getQuery()
                        ->getResult()
                    ;
                }

 Стоит помнить, что   getResult()   возвращает  массив результатов,
  а вот getOneOrNullResult()   возвращает только одну строку.


Теперь в контроллере будем вызывать этот метод для поиска БД

                $comments = $repository->findAllWithSearch($q);









