ManyToMany Relationship

Нужно для каждой Article добавить теги. Можно это сделать вручную в коде, но можно через команду
                 php bin/console make:entity

                 Class name of the entity to create or update (e.g. VictoriousJellybean):
                 > Article

                 Your entity already exists! So let's add some new fields!

                 New property name (press <return> to stop adding fields):
                 > tags

                 Field type (enter ? to see all types) [string]:
                 > relation

                 What class should this entity be related to?:
                 > Tag

                What type of relationship is this?
                 ------------ -------------------------------------------------------------
                  Type         Description
                 ------------ -------------------------------------------------------------
                  ManyToOne    Each Article relates to (has) one Tag.
                               Each Tag can relate/has to (have) many Article objects

                  OneToMany    Each Article relates can relate to (have) many Tag objects.
                               Each Tag relates to (has) one Article

                  ManyToMany   Each Article relates can relate to (have) many Tag objects.
                               Each Tag can also relate to (have) many Article objects

                  OneToOne     Each Article relates to (has) exactly one Tag.
                               Each Tag also relates to (has) exactly one Article.
                 ------------ -------------------------------------------------------------

                 Relation type? [ManyToOne, OneToMany, ManyToMany, OneToOne]:
                 > ManyToMany

                 Do you want to add a new property to Tag so that you can access/update Article objects from it - e.g. $tag->getArticles()? (yes/no) [yes]:
                 > yes

                 A new property will also be added to the Tag class so that you can access the related Article objects from it.

                 New field name inside Tag [articles]:
                 >

                 updated: src/Entity/Article.php
                 updated: src/Entity/Tag.php

                 Add another property? Enter the property name (or press <return> to stop adding fields):
                 >



                  Success!


                 Next: When you're ready, create a migration with make:migration


После изменений создаем Миграции
            php bin/console make:migration

 Если посмотреть содержимое миграции, то будет создана новая Таблица
            $this->addSql('CREATE TABLE article_tag (article_id INT NOT NULL, tag_id INT NOT NULL, INDEX IDX_919694F97294869C (article_id), INDEX IDX_919694F9BAD26311 (tag_id), PRIMARY KEY(article_id, tag_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ENGINE = InnoDB');

 В случае отношений  ManyToMany будет создана таблица всего с 2-мя полями.

 И эта ситуация для Доктрины единственная, когда у таблицы в БД нет прямого класса Сущностей.

 Записи в этой таблице будут добавляться/удаляться по мере добавления тегов в статьях.


 Осталось применить миграцию
            php bin/console doctrine:migrations:migrate


