All about Entity Repositories

Контент для страниц статей теперь выводится из БД, а вот список статей на главной странице сайта пока что захардкоден в коде.
                /**
                 * @Route("/", name="app_homepage")
                 */
                public function homepage()
                {
                    return $this->render('article/homepage.html.twig');
                }

Первое в экшн контролера передадим Сервис
            homepage(EntityManagerInterface $em)

Второе получим репозиторий
                $repository = $em->getRepository(Article::class);
Третье получим все статьи из него
              $articles = $repository->findAll();
Теперь этот массив объектов передадим в шаблон
                        return $this->render('article/homepage.html.twig', [
                            'articles' => $articles
                        ]);

Перейдем в шаблон    /templates/article/homepage.html.twig  и сделаем вывод динамического контента
                        <!-- Supporting Articles -->
                        {% for article in articles %}
                        <div class="article-container my-1">
                            <a href="{{ path('article_show', { slug: article.slug }) }}">
                                <img class="article-img" src="{{ asset('images/asteroid.jpeg') }}">
                                <div class="article-title d-inline-block pl-3 align-middle">
                                    <span>{{ article.title }}</span>
                                    <br>
                                    <span class="align-left article-details"><img class="article-author-img rounded-circle" src="{{ asset('images/alien-profile.png') }}"> Mike Ferengi </span>
                                    <span class="pl-5 article-details float-right">
                                        {{ article.publishedAt ? article.publishedAt|ago }}
                                    </span>
                                </div>
                            </a>
                        </div>
                        {% endfor %}

*** Controlling the ORDER BY ***
 Сейчас статьи будут выводиться даже неопубликованные и не попорядку публикации.
  мы не можем контролировать метод (он не принимает никаких аргументов), который сейчас используем.
              $articles = $repository->findAll();
 Воспользуемся
            $articles = $repository->findBy([], ['publishedAt' => 'DESC']);
   первый аргумент пустой массив, в него передают критерии для WHERE.


*** Hello ArticleRepository ***
 В метод Репозитория ->findBy()   можно передавать простые критерии, как например {slug}, но невозможно указать  WHERE publishedAt IS NOT NULL
  Требуется написать пользовательский запрос.


