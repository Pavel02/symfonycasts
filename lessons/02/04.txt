Configuring a Bundle

Посмотрим на маркдаун объект, для этого в методе контролера напишем.
        dump($markdown);
        die;

Обновим страницу в браузере и увидим фрагмент вывода на экран
                Max {#210 ▼
                  #features: array:19 [▼
                    "header" => true
                    "list" => true
                    "horizontal_rule" => true
                    "table" => true
                    "foot_note" => true
                    "fenced_code_block" => true
                    "abbreviation" => true
                    "definition_list" => true
                    "inline_link" => true
                    "reference_link" => true
                    "shortcut_link" => true
                    "images" => true
                    "block_quote" => true
                    "code_block" => true
                    "html_block" => true
                    "auto_link" => true
                    "auto_mailto" => true
                    "entities" => true
                    "no_html" => false
                  ]
                  ........

Отсюда видим, что  $markdown это объект некоторого класса Max с опред настраиваемым поведением on/off.

Есть способ выяснить все способы настройки конфигурации, без чтения документации.
        bin/console config:dump KnpMarkdownBundle
 и мы получим вот такой вывод в консоль.
                    # Default configuration for "KnpMarkdownBundle"
                    knp_markdown:
                        parser:
                            service:              markdown.parser.max
                        sundown:
                            extensions:
                                fenced_code_blocks:   false
                                no_intra_emphasis:    false
                                tables:               false
                                autolink:             false
                                strikethrough:        false
                                lax_html_blocks:      false
                                space_after_headers:  false
                                superscript:          false
                            render_flags:
                                filter_html:          false
                                no_images:            false
                                no_links:             false
                                no_styles:            false
                                safe_links_only:      false
                                with_toc_data:        false
                                hard_wrap:            false
                                xhtml:                false
  Это дает нам инфо о всех возможных настройках для этого пакета, через YAML пример файла.

Если мы зайдем в документацию на гитхабе     https://github.com/KnpLabs/KnpMarkdownBundle
  , то внизу увидим
        This bundle comes with 5 parser services, 4 based on the same algorithm but providing different levels of compliance to the markdown specification, and one which is uses the php sundown extension:

        - markdown.parser.max       // fully compliant = slower (default implementation)
        - markdown.parser.medium    // expensive and uncommon features dropped
        - markdown.parser.light     // expensive features dropped
        - markdown.parser.min       // most features dropped = faster
        - markdown.parser.sundown   // faster and fully compliant (recommended)
По умолчанию используется    - markdown.parser.max     включающий все возможности, но и самый медленный по работе.
    Сейчас переключимся на версию   light.

Для этого создадим новый конфигурационный файл     config/packages/knp_markdown.yaml
  и пропишем там содержимое
            knp_markdown
              parser:
                service: markdown.parser.light

и прежде чем проверить результат настройки, нужно очистить кеш Симфони.
                bin/console cache:clear
  иногда бывает, что кеш симфони не перестраивается автоматически при добавленни нового конфиг файла.


Если теперь посмотреть, что хранится в переменной $markdown, то теперь это будет
            Light {#4188 ▼
              #features: array:19 [▼
                "header" => true
                "list" => true
                "horizontal_rule" => true
                "table" => false
                "foot_note" => false
                "fenced_code_block" => false
                "abbreviation" => false
                "definition_list" => false
                "inline_link" => true
                "reference_link" => true
                "shortcut_link" => false
                "images" => true
                "html_block" => false
                "block_quote" => false
                "code_block" => false
                "auto_link" => true
                "auto_mailto" => false
                "entities" => false
                "no_html" => false
              ]
              +fn_id_prefix: ""  ...........................

Теперь это объект класса        Light  !


Стоит отметить, что Symfony автоматически загружает все файлы в каталоге    /config/packages  ,
  поэтому технически имена этих файлов могут быть любые.
Главное в их содержимом. Например все под framework   передается ввиде настроек в  frameworkbundle
        framework:
            secret: '%env(APP_SECRET)%'
            #default_locale: en
            #csrf_protection: ~

Как и все под    knp_markdown    передается в KnpMarkdownBundle.
                        knp_markdown
                          parser:
                            service: markdown.parser.light

Так же и все под  twig конфигруит TwigBundle
        twig:
            paths: ['%kernel.project_dir%/templates']
            debug: '%kernel.debug%'
            strict_variables: '%kernel.debug%'



Можно все возможные корректные настройки посмотреть с помощью
        ./bin/console config:dump TwigBundle
 или все тоже самое по ключу получить.
        ./bin/console config:dump twig

И конечно более подробно все они описаны в документации к TwigBundle.



