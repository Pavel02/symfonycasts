The Cache Service

Сервис кеширования включен в Symfony "из коробки".

Если посмотрим    bin/console debug:autowiring  , то доступны
              Psr\Cache\CacheItemPoolInterface
                  alias to cache.app

              Symfony\Component\Cache\Adapter\AdapterInterface
                  alias to cache.app

Доступно два интерфейса с одинаковым алиасом   cache.app
 Внутри каждый Сервис имеет уникальное имя или id  как и Роуты.

 Например, внутренний id для сервиса кеша это   cache.app


Нужно закешировать преобразование markdown, потому что нет никаких причин, делать это при каждом запросе.

Кеширование в Symfony следует рекомендациям PSR-6, это означает улучшенно взаимодействие между разными библиотеками кеширования.

В метод контролера добавим нужный Сервис
            public function show($slug, MarkdownInterface $markdown, AdapterInterface $cache)


В теле метода создадим объект класса CacheItem с уник именем ключа.
         $item = $cache->getItem('markdown_' . md5($articleContent));

теперь у нас есть возможность сохранять и получать по этому уникальному ключу.

Для проверки, что ключ еще не кешируется, используем:
        if (!item->isHit()) { .... }

Внутри делаем сохранение и прочее и т.д. В итоге получается
                    $item = $cache->getItem('markdown_' . md5($articleContent));
                    if (!$item->isHit()) {
                        $item->set($markdown->transform($articleContent));
                        $cache->save($item);
                    }
                    $articleContent = $item->get();

При перезагрузке браузера перейдем в отладчик в раздел Cache  => Pools. В первый раз там 2 обращения к кешу.
А при последующих только одно (по ключу будет доставаться значение).

Также при внесении изменений в   $articleContent   у нас закешируется новое значение и новый ключ.















